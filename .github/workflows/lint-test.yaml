name: "Lint and Test Chart"

on:
  push:
    branches:
      - main
    paths:
    - 'charts/**'
  pull_request:
    paths:
      - 'charts/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  HELM_DOCS_VERSION: '1.11.0' # renovate: datasource=github-releases depName=helm-docs lookupName=norwoodj/helm-docs

jobs:
  lint-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.7.2 # renovate: datasource=github-releases depName=helm lookupName=helm/helm
      
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # tag=v4.3.0
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@afea100a513515fbd68b0e72a7bb0ae34cb62aec # tag=v2.3.1
        with:
          version: v3.4.0 # renovate: datasource=github-releases depName=chart-testing lookupName=helm/chart-testing

      - name: Run lint
        run: ct lint --config .github/ct.yaml

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed  --config .github/ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

  lint-docs:
    runs-on: ubuntu-latest
    needs: lint-chart
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
        with:
          fetch-depth: 0
      - name: Download helm-docs
        run: |
          curl -sSL https://github.com/norwoodj/helm-docs/releases/download/v${{ env.HELM_DOCS_VERSION }}/helm-docs_${{ env.HELM_DOCS_VERSION }}_Linux_x86_64.tar.gz | \
            tar xzf - helm-docs
      - name: Update docs
        run: |
          for chart in charts/*; do
            pushd $chart && $GITHUB_WORKSPACE/helm-docs -o README.md.new; popd
          done
      - name: Check diff output
        run: |
          git diff-index --name-only --exit-code HEAD

  # kubeconform:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - lint-chart
  #     - lint-docs
  #   steps:
  #   - uses: actions/checkout@master

  #   - name: Generate and validate releases
  #     uses: shivjm/helm-kubeconform-action@v0.2.0
  #     with:
  #       additionalSchemaPaths: |
  #         schemas/{{ .ResourceKind }}.json
  #       chartsDirectory: "charts"

  install-chart:
    name: install-chart
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.repository_owner != github.event.pull_request.head.repo.owner.login || !startsWith(github.event.pull_request.head.ref, 'renovate/') }}
    needs:
      - lint-chart
      - lint-docs
      # - kubeconform
    strategy:
      matrix:
        k8s:
          # from https://hub.docker.com/r/kindest/node/tags
          - v1.25.2 # renovate: kindest
          - v1.23.0 # renovate: kindest
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
        with:
          fetch-depth: 0

      - name: Create kind ${{ matrix.k8s }} cluster
        uses: helm/kind-action@9e8295d178de23cbfbd8fa16cf844eec1d773a07 # tag=v1.4.0
        with:
          node_image: kindest/node:${{ matrix.k8s }}
          version: v0.11.1 # renovate: datasource=github-releases depName=kind lookupName=kubernetes-sigs/kind

      - name: Install chart-testing
        uses: helm/chart-testing-action@afea100a513515fbd68b0e72a7bb0ae34cb62aec # tag=v2.3.1
        with:
          version: v3.4.0 # renovate: datasource=github-releases depName=chart-testing lookupName=helm/chart-testing

      - name: Run chart install
        run: ct install --config .github/ct.yaml
